- name: Generate Kubelet Kubeconfigs for Each Worker Node
  shell: |
      kubectl config set-cluster kubernetes-the-hard-way \
        --certificate-authority=ca.pem \
        --embed-certs=true \
        --server=https://{{ master_priv_ip }}:6443 \
        --kubeconfig={{ inventory_hostname }}.kubeconfig
      kubectl config set-credentials system:node:{{ inventory_hostname }} \
        --client-certificate={{ inventory_hostname }}.pem \
        --client-key={{ inventory_hostname }}-key.pem \
        --embed-certs=true \
        --kubeconfig={{ inventory_hostname }}.kubeconfig
      kubectl config set-context default \
        --cluster=kubernetes-the-hard-way \
        --user=system:node:{{ inventory_hostname }} \
        --kubeconfig={{ inventory_hostname }}.kubeconfig
      kubectl config use-context default --kubeconfig={{ inventory_hostname }}.kubeconfig
  when: inventory_hostname in groups['workers']

- name: Generate a Kube-Proxy Kubeconfig
  shell: |
    kubectl config set-cluster kubernetes-the-hard-way \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://{{ master_priv_ip }}:6443 \
      --kubeconfig=kube-proxy.kubeconfig
    kubectl config set-credentials system:kube-proxy \
      --client-certificate=kube-proxy.pem \
      --client-key=kube-proxy-key.pem \
      --embed-certs=true \
      --kubeconfig=kube-proxy.kubeconfig
    kubectl config set-context default \
      --cluster=kubernetes-the-hard-way \
      --user=system:kube-proxy \
      --kubeconfig=kube-proxy.kubeconfig
    kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
  when: inventory_hostname in groups['workers']

- name: Generate a Kube-Controller-Manager Kubeconfig
  shell: |
    kubectl config set-cluster kubernetes-the-hard-way \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://127.0.0.1:6443 \
      --kubeconfig=kube-controller-manager.kubeconfig
    kubectl config set-credentials system:kube-controller-manager \
      --client-certificate=kube-controller-manager.pem \
      --client-key=kube-controller-manager-key.pem \
      --embed-certs=true \
      --kubeconfig=kube-controller-manager.kubeconfig
    kubectl config set-context default \
      --cluster=kubernetes-the-hard-way \
      --user=system:kube-controller-manager \
      --kubeconfig=kube-controller-manager.kubeconfig
    kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig
  when: inventory_hostname in groups['masters']


- name: Generate a Kube-Scheduler Kubeconfig
  shell: |
    kubectl config set-cluster kubernetes-the-hard-way \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://127.0.0.1:6443 \
      --kubeconfig=kube-scheduler.kubeconfig
    kubectl config set-credentials system:kube-scheduler \
      --client-certificate=kube-scheduler.pem \
      --client-key=kube-scheduler-key.pem \
      --embed-certs=true \
      --kubeconfig=kube-scheduler.kubeconfig
    kubectl config set-context default \
      --cluster=kubernetes-the-hard-way \
      --user=system:kube-scheduler \
      --kubeconfig=kube-scheduler.kubeconfig
    kubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig
  when: inventory_hostname in groups['masters']

- name: Generate an Admin Kubeconfig
  shell: |
    kubectl config set-cluster kubernetes-the-hard-way \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://127.0.0.1:6443 \
      --kubeconfig=admin.kubeconfig
    kubectl config set-credentials admin \
      --client-certificate=admin.pem \
      --client-key=admin-key.pem \
      --embed-certs=true \
      --kubeconfig=admin.kubeconfig
    kubectl config set-context default \
      --cluster=kubernetes-the-hard-way \
      --user=admin \
      --kubeconfig=admin.kubeconfig
    kubectl config use-context default --kubeconfig=admin.kubeconfig
  when: inventory_hostname in groups['masters']